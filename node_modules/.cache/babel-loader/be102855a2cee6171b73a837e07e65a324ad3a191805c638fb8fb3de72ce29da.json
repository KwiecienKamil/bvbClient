{"ast":null,"code":"import _slicedToArray from\"D:/express/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import ReactDOM from\"react-dom\";import\"../css/loginModal.css\";import\"boxicons\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginModal=function LoginModal(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),emailLog=_useState2[0],setEmailLog=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),passwordLog=_useState4[0],setPasswordLog=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),loginMessage=_useState6[0],setLoginMessage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),LoggedIn=_useState8[0],setLoggedIn=_useState8[1];var login=function login(props){axios.post(\"http://localhost:5000/login\",{email:emailLog,password:passwordLog}).then(function(response){if(response.data.message){setLoginMessage(response.data.message);setLoggedIn(\"\");}else{setLoggedInEmail(response.data[0].email);setLoginStatus(true);setLoginMessage(\"\");setLoggedIn(\"Signed In!\");setEmailLog(\"\");setPasswordLog(\"\");window.location.reload();}});};return/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"username-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",onChange:function onChange(e){setEmailLog(e.target.value);},value:emailLog})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(e){setPasswordLog(e.target.value);},value:passwordLog})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-button\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"log-in\",onClick:login,children:\"LOG IN\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"question\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have account? \",/*#__PURE__*/_jsx(\"a\",{onClick:props.onShowSignIn,children:\"Sign in\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"login-info\",children:loginMessage}),/*#__PURE__*/_jsx(\"p\",{className:\"login-success\",children:LoggedIn})]})]}),document.getElementById(\"portal\"));};export default LoginModal;","map":{"version":3,"names":["React","useState","ReactDOM","axios","jsx","_jsx","jsxs","_jsxs","LoginModal","props","_useState","_useState2","_slicedToArray","emailLog","setEmailLog","_useState3","_useState4","passwordLog","setPasswordLog","_useState5","_useState6","loginMessage","setLoginMessage","_useState7","_useState8","LoggedIn","setLoggedIn","login","post","email","password","then","response","data","message","setLoggedInEmail","setLoginStatus","window","location","reload","createPortal","className","children","htmlFor","type","onChange","e","target","value","onClick","onShowSignIn","document","getElementById"],"sources":["D:/express/client/src/Modal/LoginModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../css/loginModal.css\";\r\nimport \"boxicons\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginModal = (props) => {\r\n  const [emailLog, setEmailLog] = useState(\"\");\r\n  const [passwordLog, setPasswordLog] = useState(\"\");\r\n  const [loginMessage, setLoginMessage] = useState(\"\");\r\n  const [LoggedIn, setLoggedIn] = useState(\"\");\r\n\r\n  const login = (props) => {\r\n    axios\r\n      .post(\"http://localhost:5000/login\", {\r\n        email: emailLog,\r\n        password: passwordLog,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.message) {\r\n          setLoginMessage(response.data.message);\r\n          setLoggedIn(\"\");\r\n        } else {\r\n          setLoggedInEmail(response.data[0].email);\r\n          setLoginStatus(true);\r\n          setLoginMessage(\"\");\r\n          setLoggedIn(\"Signed In!\");\r\n          setEmailLog(\"\");\r\n          setPasswordLog(\"\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n  };\r\n  return ReactDOM.createPortal(\r\n    <div className=\"modal-container\">\r\n      <div className=\"username-container\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          onChange={(e) => {\r\n            setEmailLog(e.target.value);\r\n          }}\r\n          value={emailLog}\r\n        />\r\n      </div>\r\n      <div className=\"password-container\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          onChange={(e) => {\r\n            setPasswordLog(e.target.value);\r\n          }}\r\n          value={passwordLog}\r\n        />\r\n      </div>\r\n      <div className=\"modal-button\">\r\n        <button type=\"submit\" className=\"log-in\" onClick={login}>\r\n          LOG IN\r\n        </button>\r\n      </div>\r\n      <div className=\"question\">\r\n        <p>\r\n          Don't have account? <a onClick={props.onShowSignIn}>Sign in</a>\r\n        </p>\r\n        <p className=\"login-info\">{loginMessage}</p>\r\n        <p className=\"login-success\">{LoggedIn}</p>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}