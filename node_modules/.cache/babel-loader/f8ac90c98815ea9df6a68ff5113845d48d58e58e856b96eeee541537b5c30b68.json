{"ast":null,"code":"var _jsxFileName = \"D:\\\\express\\\\client\\\\src\\\\Modal\\\\SignInModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../css/loginModal.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInModal = props => {\n  _s();\n  const [emailReg, setEmailReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const register = () => {\n    axios.post('http://localhost:5000/register', {\n      email: emailReg,\n      password: passwordReg\n    }).then(response => {\n      console.log(response);\n      refreshPage();\n    });\n  };\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => {\n          setEmailReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => {\n          setPasswordReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"sign-in\",\n        onClick: register,\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already signed in?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: props.onShowLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), document.getElementById('portal'));\n};\n_s(SignInModal, \"68tEaJgJCdHfJ0jqPkuHITOmENA=\");\n_c = SignInModal;\nexport default SignInModal;\nvar _c;\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"names":["React","useState","ReactDOM","axios","jsxDEV","_jsxDEV","SignInModal","props","_s","emailReg","setEmailReg","passwordReg","setPasswordReg","register","post","email","password","then","response","console","log","refreshPage","window","location","reload","createPortal","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","onShowLogin","document","getElementById","_c","$RefreshReg$"],"sources":["D:/express/client/src/Modal/SignInModal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport  ReactDOM  from 'react-dom'\r\nimport '../css/loginModal.css'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst SignInModal = (props) => {\r\n  const [emailReg, setEmailReg] = useState('')\r\n  const [passwordReg, setPasswordReg] = useState('')\r\n  \r\n  const register = () => {\r\n    axios.post('http://localhost:5000/register', {\r\n    email: emailReg,\r\n    password: passwordReg,\r\n  }).then((response) => {\r\n    console.log(response)\r\n    refreshPage()\r\n  })\r\n  }\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    ReactDOM.createPortal(\r\n    <div className='modal-container'>\r\n        <div className=\"username-container\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" onChange={(e) => {setEmailReg(e.target.value)}}/>\r\n        </div>\r\n        <div className=\"password-container\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" onChange={(e) => {setPasswordReg(e.target.value)}}/>\r\n        </div>\r\n        <div className=\"modal-button\">\r\n            <button type='submit' className='sign-in' onClick={register}>SIGN IN</button>\r\n        </div>\r\n        <div className=\"question\">\r\n        <p>Already signed in?<a onClick={props.onShowLogin}>Login</a></p>\r\n        </div>\r\n    </div>,\r\n    document.getElementById('portal')\r\n  )\r\n  )\r\n}\r\n\r\nexport default SignInModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}